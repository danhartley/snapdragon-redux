
  a {
    color: var(--snap-youtube-green);
    text-decoration: none !important;
  }

  h1 {
    font-size: .9rem;
  }

  h2 {
    font-size: .8rem;
    color: var(--snap-text-6);
  }

  h3 {
    font-size: .7rem;
  }

  img {
    max-width: 100%;
    display: block;
  }

  h1, h2, h3, h4, h5, h6 {
    font-weight: unset;
    margin: 0 !important;
  }

  fieldset {
    border: none;
  }

  label {
    margin: 0;
  }

  legend {
    margin: 0;
    width: initial !important;
  }

  caption {
    padding: 0;
    height: 0;
  }

  dt {
    font-weight: 500;
  }

  svg {
    pointer-events: none;
  }

  figure {
    pointer-events: all;
  }

  .flex {
    display: flex;
  }

  .flexnowrap {
    flex-wrap: nowrap;
  }

  .relative {
    position: relative;
  }

  .absolute {
    position: absolute;
  }

  .standard-block {
    height: var(--vhStandardBlock, 10vh);
  }
  
  .double-standard-block {
    height: var(--vhDoubleStandardBlock, 20vh);
  }
  
  .half-standard-block {
    height: var(--vhHalfStandardBlock, 5vh);
  }
  
  .one-and-half-standard-block {
    height: var(--vhOneAndHalfStandardBlock, 15vh);
  }

 .centred-block {
    display: flex;
    align-items: center;
    width: -moz-available;
    width: -webkit-fill-available;
  }
  
  .bottom-aligned {
    display: flex;
    align-items: flex-end;
  }
  
  .double-centred-block {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .vertical-centred-block {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  
  .vertical-evenly-spaced-block {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
  }
  
  .horizontal-evenly-spaced-block {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
  }

  .margin-all {
    margin: .5rem !important;
  }
  
  .margin-top {
    margin-top: .5rem !important;
  }
  
  .margin-right {
    margin-right: .5rem !important;
  }
  
  .half-margin-right {
    margin-right: .25rem !important;
  }
  
  .double-margin-top {
    margin-top: 1rem !important;
  }
    
  .double-margin-right {
    margin-right: 1rem !important;
  }
  
  .margin-bottom {
    margin-bottom: .5rem !important;
  }
  
  
  .double-margin-bottom {
    margin-bottom: 1rem !important;
  }
  
  .margin-left {
    margin-left: .5rem !important;
  }
  
  .double-margin-left {
    margin-left: 1rem !important;
  }
  
  .half-margin-left {
    margin-left: .25rem !important;
  }
  
  .padding {
    padding: .5rem;
  }
  
  
  .half-padding {
    padding: .25rem;
  }
  
  .padding-top {
    padding-top: .5rem;
  }
  
  .padding-right {
    padding-right: .5rem;
  }
  
  .padding-bottom {
    padding-bottom: .5rem;
  }
  
  .padding-left {
    padding-left: .5rem;
  }

  .custom-checkbox input {
    margin: 0 0.5rem 0 0;
  }

  .show {
    display: inline;
  }
  
  .hide {
    display: none;
  }
  
  .hide-important {
    display: none !important;
  }


  .visually-hidden:not(:focus):not(:active) {
    position: absolute !important;
    height: 1px; 
    width: 1px;
    overflow: hidden;
    clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    white-space: nowrap; /* added line */
}
  
  .underline-link {
    color: var(--snap-link);
    cursor: pointer;
    display: inline-block;
    line-height: 1.4;
    border-bottom: 1px solid var(--snap-link);
  }

  .underline-link:hover, .underline-link:focus {
    color: var(--snap-link-hover);
  }

  .underline-link:focus {
    outline: 1px solid var(--snap-border-2)
  }

  .full-width {
    width: 100%;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .border-top {
    border-bottom: 1px solid var(--snap-border-3);
  }

  .border-right {
    border-right: 1px solid var(--snap-border-3);
  }

  .border-bottom {
    border-bottom: 1px solid var(--snap-border-3);
  }

  .border-left {
    border-left: 1px solid var(--snap-border-3);
  }

  .justify-space-between {
    justify-content: space-between !important;
  }

  .justify-start {
    justify-content: flex-start !important;
  }

  .justify-end {
    justify-content: flex-end !important;
  }

  .small-text {
    font-size: .8rem !important;
  }

  .smaller-text {
    font-size: .7rem !important;
  }

  .extra-small-text {
    font-size: .6rem !important;
  }

  .large-text {
    font-size: 1.2rem !important;
  }

  .extra-large-text {
    font-size: 1.5rem !important;
  }

  .capitalise {
    text-transform: capitalize;
  }
  
  .uppercase {
    text-transform: uppercase;
  }
  
  .line-through {
    text-decoration: line-through;
  }

  .modal-background-relief {
    background-color: var(--snap-yellow-1);
  }

  .modal-background-relief-emphasis {
    border: 1px solid var(--snap-success-3) !important;
  }

  .border-light {
    border: 1px solid var(--snap-success-1) !important;
  }

  .border-medium {
    border: 1px solid var(--snap-border-2);
  }

  .vertical-block {
    display: flex;
    flex-direction: column;
  }

  .emphasis {
    font-weight: bold;
    letter-spacing: .03rem;
  }
  
  .absolute-bottom {
    position: absolute;
    bottom: .5rem;
  }

  .answer-response {
    margin: 0 0 0 .25rem;
  }

  .col-count-2 {
    column-count: 2;
  }

  .col-count-3 {
    column-count: 3;
  }

  .col-count-4 {
    column-count: 4;
  }

  .col-count-5 {
    column-count: 5;
  }

  .col-count-6 {
    column-count: 6;
  }

  .nowrap {
    white-space: nowrap;
  }
  
  .snap-inactive {
    color: var(--snap-text-3) !important;
    pointer-events: none !important;
  }

  .black-text {
    color: var(--snap-text-6);
  }

  /* If set to display inline, would width automatically be determined by the text they contain? each span vs div */
  .fit-width {
    /* width: intrinsic;           Safari/WebKit uses a non-standard name */
    width: -moz-max-content;    /* Firefox/Gecko */
    width: -webkit-max-content; /* Chrome */
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }  

  .super {
    vertical-align: super;
    font-size: .8em;
  }  
  
  .list-group-item {
    font-size: .8rem;
    padding: .25rem .5rem;
  }

  .snap-btn {
    background-color: var(--snap-background-1);
    color: var(--snap-text-6);
    letter-spacing: .05rem;
    border: 1px solid var(--snap-border-3);
    padding: .25rem .75rem;
  }
  
  .snap-btn:hover, .snap-btn:focus {
    opacity: 1;
    border: 1px solid var(--snap-border-1);
    outline: none;
  }
  
  .snap-btn:focus:not(:focus-visible), .snap-icon-btn:focus:not(:focus-visible) {
    border: 1px solid var(--snap-active);
    outline: none;
  }
  
  .dropdown .snap-btn:hover, .dropdown .snap-btn:focus {
    border: 1px solid var(--snap-border-3);
  }
  
  .snap-icon-btn {
    color: var(--snap-text-4);
    background-color: transparent;
    border: 1px solid transparent;
    margin: 0 .5rem;
    padding: 0 1px;    
  }

  .nav-icons .snap-icon-btn, .nav-icons a {
    margin: 0;
    padding: 0;
  }

  .block.snap-icon-btn:focus, .block.snap-icon-btn:hover {
    background-color: var(--snap-background-2);
    outline: 1px solid var(--snap-border-1);
  }
  
  .strip:focus-within {
    background-color: var(--snap-background-2);
  }

  .snap-link-btn, .snap-no-link-btn {
    color: var(--snap-text-4);
    background-color: transparent;
    border: none;
    font-size: .7rem;
    width: intrinsic;           /* Safari/WebKit uses a non-standard name */
    width: -moz-max-content;    /* Firefox/Gecko */
    width: -webkit-max-content; /* Chrome */
  }

  .snap-link-btn {
    color: var(--snap-green-4);
  }

  .main.snap-link-btn {
    font-size: 1rem;
    color: var(--snap-text-4);
  }

  .main.snap-link-btn.active {
    border-bottom: 1px solid var(--snap-border-3);
    margin-top: 1px;
    pointer-events: none;
  }

  .main.snap-link-btn.disabled {
    pointer-events: none;
  }
  
  .snap-no-link-btn {
    pointer-events: none;
  }
  
  .snap-action-btn {
    background-color: var(--snap-green-4);
    color: var(--snap-text-1);
    letter-spacing: .05rem;
    border: 1px solid var(--snap-green-3) !important;
    padding: .5rem .75rem;
  }
  
  .snap-action-btn:focus {
    outline: 1px solid var(--snap-border-2);
    color: var(--snap-text-6);
  }
  
  .snap-action-btn.snap-success {
    color: var(--snap-text-1) !important;
    background-color: var(--snap-success-3) !important;
    border: 0.05rem solid var(--snap-success-3);
  }
  
  .snap-action-btn.snap-alert {
    color: var(--snap-text-1) !important;
    background-color: var(--snap-alert-3) !important;
    border: 0.05rem solid var(--snap-alert-3);
  }  

  .horizontal-spacing {
    margin: 0 .25rem;
  }


  /* AUTOCOMPLETE */
  
  #inat-place.active, #input-species.active {
    border: .1rem solid var(--snap-text-4);
  }
  
  .autocomplete-options-container, .inat-autocomplete-options-container {
    z-index: 9999;
    color: var(--snap-text-5);
    background-color: rgb(250, 250, 250);
    border: .05rem solid var(--snap-border-1);
    text-align: left;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    top: calc(
      var(--vhRunningBlock, 7.5vh) + 
      5px +
      var(--vhStandardBlock, 10vh) +
      var(--vhRunningBlock, 7.5vh)       
      + .25rem
      ) !important;
      left: .5rem;
      right: .5rem;
  }

  .autocomplete-options-container.autocomplete, .inat-autocomplete-user-container, .inat-autocomplete-user-container {
    height: 10rem !important;
    background-color: var(--snap-background-3);
  }

  .inat-autocomplete-options-container {
    top: calc(
      var(--vhRunningBlock, 7.5vh) + 
      5px
      + var(--vhStandardBlock, 10vh)
      + var(--vhRunningBlock, 7.5vh)
      + var(--vhStandardBlock, 10vh)
      + .5rem
      ) !important;
  }

  .autocomplete-options-container > div, .inat-autocomplete-options-container > div, .inat-autocomplete-user-container > div {
    padding: .25rem;
  }
  
  .autocomplete-options-container .selected, .inat-autocomplete-options-container .selected, .inat-autocomplete-user-container .selected {
    color: var(--snap-text-1);
    background-color: var(--snap-background-5);
  }

  .autocomplete-options-container > div:hover:not(.group), .inat-autocomplete-user-container > div:hover:not(.group){
    color: var(--snap-text-1);
    background-color: var(--snap-background-5);
    cursor: pointer;    
  }

  .autocomplete-options-container > div.selected, .inat-autocomplete-user-container > div.selected{
    color: var(--snap-text-1);
    background-color: var(--snap-background-5);
    cursor: pointer;
  }
  
    #place span {
      margin: 0 .25rem 0 0;
    }