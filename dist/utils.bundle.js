/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/utils/utils.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/utils/utils.js":
/*!****************************!*\
  !*** ./src/utils/utils.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nArray.prototype.concatAll = function () {\n  var results = [];\n\n  this.forEach(function (subArray) {\n    subArray.forEach(function (element) {\n      results.push(element);\n    });\n  });\n\n  return results;\n};\n\nvar log = function log(msg) {\n  return function (array) {\n    console.log(msg, array);\n    return array;\n  };\n};\n\nvar encodeQuery = function encodeQuery(q) {\n  if (q === undefined) return q;\n  if (Number.isInteger(q)) return q;\n  return encodeURIComponent(q.trim());\n};\n\nvar timer = function timer(sink, delay) {\n  var id = null;\n  Bacon.fromBinder(function () {\n    id = setInterval(function () {\n      sink();\n    }, delay);\n  }).onValue(function (element) {\n    console.log(element);\n  });\n  return id;\n};\n\nfunction intervalTimer(sink, delay) {\n  var timerId;\n\n  this.pause = function () {\n    window.clearInterval(timerId);\n  };\n\n  this.resume = function () {\n    window.clearInterval(timerId);\n    timerId = timer(sink, delay);\n  };\n\n  this.getId = function () {\n    return timerId;\n  };\n\n  this.resume();\n\n  return this;\n};\n\nvar shuffleArray = function shuffleArray(array) {\n\n  if (!array) return;\n\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return [].concat(_toConsumableArray(array));\n\n  // return (arr\n  //   .map(a => [Math.random(), a])\n  //   .sort((a, b) => a[0] - b[0])\n  //   .map(a => a[1]))\n};\n\nvar randomiseSelection = function randomiseSelection(source, required) {\n  var zeroBased = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var r = function r(selection) {\n    var arr = shuffleArray(source);\n    selection = selection.concat(arr.map(function (item, index) {\n      if (index + selection.length < required) {\n        return zeroBased ? --item : item;\n      }\n    })).filter(function (item) {\n      return item !== undefined;\n    });\n    return selection.length < required ? r(selection) : selection;\n  };\n  return r([]);\n};\n\nvar nextItem = function nextItem(array, index) {\n  var item = array[index % array.length];\n  item.index = index % array.length;\n  return item;\n};\n\nvar insertObjectBetweenItems = function insertObjectBetweenItems(array, insert) {\n  var insertedIntoArray = array.reduce(function (acc, curr, currIndex) {\n    return acc.concat([insert, curr]);\n  }, []);\n  return insertedIntoArray;\n};\n\nvar doubledItemsInArray = function doubledItemsInArray(array) {\n  var doubledArray = array.reduce(function (acc, curr, currIndex) {\n    return acc.concat([curr, curr]);\n  }, []);\n  return doubledArray;\n};\n\nvar onlyUnique = function onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n};\n\nvar sortBy = function sortBy(arr, prop) {\n  var dir = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'asc';\n\n  return dir === 'asc' ? arr.sort(function (a, b) {\n    return parseFloat(a[prop]) - parseFloat(b[prop]);\n  }) : arr.sort(function (a, b) {\n    return parseFloat(b[prop]) - parseFloat(a[prop]);\n  });\n};\n\nvar sortAlphabeticallyBy = function sortAlphabeticallyBy(arr, prop) {\n  arr.sort(function (a, b) {\n    if (a[prop] < b[prop]) return -1;\n    if (a[prop] > b[prop]) return 1;\n    return 0;\n  });\n  return arr;\n};\n\nvar calcItemIndex = function calcItemIndex(offSet, moduleSize, index) {\n  var itemIndex = (offSet + index) % moduleSize === 0 ? offSet : offSet + (offSet + index) % moduleSize;\n  return itemIndex;\n};\n\nvar isIterable = function isIterable(array) {\n  return Array.isArray(array) && array.length !== 0;\n};\n\nvar capitaliseFirst = function capitaliseFirst(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nvar capitaliseAll = function capitaliseAll(str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nvar getCellValue = function getCellValue(tr, idx) {\n  var valueToSortOn = tr.children[idx].innerText || tr.children[idx].classList[0] || tr.children[idx].textContent;\n  return valueToSortOn;\n};\n\nvar comparer = function comparer(idx, asc) {\n  return function (a, b) {\n    return function (v1, v2) {\n      return v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2);\n    }(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));\n  };\n};\n\nvar makeSortable = function makeSortable(document, callback) {\n\n  Array.from(document.querySelectorAll('th > span:nth-child(1)')).forEach(function (sp) {\n    sp.addEventListener('click', function () {\n      var names = [];\n      var th = this.parentElement;\n      if (th.classList[0] === 'not-sortable') return;\n      var table = th.closest('table');\n      var body = table.querySelector('tbody');\n      var footer = table.querySelector('tfoot');\n\n      Array.from(table.querySelectorAll('tr:nth-child(n+2)')).sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc)).forEach(function (tr) {\n        if (tr !== footer) {\n          body.appendChild(tr);\n          names.push(tr.cells[0].id);\n        }\n      });\n\n      callback(names);\n    });\n  });\n};\n\nvar itemCountReducer = function itemCountReducer(acc, curr) {\n  acc[curr.toString()] = acc[curr.toString()] || 0;\n  acc[curr.toString()]++;\n  return acc;\n};\n\nvar flatten = function flatten(array) {\n  var flattenedArray = array.reduce(function (accumulator, currentValue) {\n    return accumulator.concat(currentValue);\n  }, []);\n  return flattenedArray;\n};\n\nvar utils = exports.utils = {\n  log: log,\n  encodeQuery: encodeQuery,\n  timer: timer,\n  intervalTimer: intervalTimer,\n  shuffleArray: shuffleArray,\n  nextItem: nextItem,\n  randomiseSelection: randomiseSelection,\n  insertObjectBetweenItems: insertObjectBetweenItems,\n  doubledItemsInArray: doubledItemsInArray,\n  onlyUnique: onlyUnique,\n  sortBy: sortBy,\n  sortAlphabeticallyBy: sortAlphabeticallyBy,\n  calcItemIndex: calcItemIndex,\n  isIterable: isIterable,\n  capitaliseFirst: capitaliseFirst,\n  capitaliseAll: capitaliseAll,\n  makeSortable: makeSortable,\n  itemCountReducer: itemCountReducer,\n  flatten: flatten\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy91dGlscy91dGlscy5qcyJdLCJuYW1lcyI6WyJBcnJheSIsInByb3RvdHlwZSIsImNvbmNhdEFsbCIsInJlc3VsdHMiLCJmb3JFYWNoIiwic3ViQXJyYXkiLCJlbGVtZW50IiwicHVzaCIsImxvZyIsImNvbnNvbGUiLCJtc2ciLCJhcnJheSIsImVuY29kZVF1ZXJ5IiwicSIsInVuZGVmaW5lZCIsIk51bWJlciIsImlzSW50ZWdlciIsImVuY29kZVVSSUNvbXBvbmVudCIsInRyaW0iLCJ0aW1lciIsInNpbmsiLCJkZWxheSIsImlkIiwiQmFjb24iLCJmcm9tQmluZGVyIiwic2V0SW50ZXJ2YWwiLCJvblZhbHVlIiwiaW50ZXJ2YWxUaW1lciIsInRpbWVySWQiLCJwYXVzZSIsIndpbmRvdyIsImNsZWFySW50ZXJ2YWwiLCJyZXN1bWUiLCJnZXRJZCIsInNodWZmbGVBcnJheSIsImN1cnJlbnRJbmRleCIsImxlbmd0aCIsInRlbXBvcmFyeVZhbHVlIiwicmFuZG9tSW5kZXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJyYW5kb21pc2VTZWxlY3Rpb24iLCJzb3VyY2UiLCJyZXF1aXJlZCIsInplcm9CYXNlZCIsInIiLCJhcnIiLCJzZWxlY3Rpb24iLCJjb25jYXQiLCJtYXAiLCJpdGVtIiwiaW5kZXgiLCJmaWx0ZXIiLCJuZXh0SXRlbSIsImluc2VydE9iamVjdEJldHdlZW5JdGVtcyIsImluc2VydCIsImluc2VydGVkSW50b0FycmF5IiwicmVkdWNlIiwiYWNjIiwiY3VyciIsImN1cnJJbmRleCIsImRvdWJsZWRJdGVtc0luQXJyYXkiLCJkb3VibGVkQXJyYXkiLCJvbmx5VW5pcXVlIiwidmFsdWUiLCJzZWxmIiwiaW5kZXhPZiIsInNvcnRCeSIsInByb3AiLCJkaXIiLCJzb3J0IiwiYSIsImIiLCJwYXJzZUZsb2F0Iiwic29ydEFscGhhYmV0aWNhbGx5QnkiLCJjYWxjSXRlbUluZGV4Iiwib2ZmU2V0IiwibW9kdWxlU2l6ZSIsIml0ZW1JbmRleCIsImlzSXRlcmFibGUiLCJpc0FycmF5IiwiY2FwaXRhbGlzZUZpcnN0Iiwic3RyIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJzbGljZSIsImNhcGl0YWxpc2VBbGwiLCJyZXBsYWNlIiwidHh0Iiwic3Vic3RyIiwidG9Mb3dlckNhc2UiLCJnZXRDZWxsVmFsdWUiLCJ0ciIsImlkeCIsInZhbHVlVG9Tb3J0T24iLCJjaGlsZHJlbiIsImlubmVyVGV4dCIsImNsYXNzTGlzdCIsInRleHRDb250ZW50IiwiY29tcGFyZXIiLCJhc2MiLCJ2MSIsInYyIiwiaXNOYU4iLCJ0b1N0cmluZyIsImxvY2FsZUNvbXBhcmUiLCJtYWtlU29ydGFibGUiLCJkb2N1bWVudCIsImNhbGxiYWNrIiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzcCIsImFkZEV2ZW50TGlzdGVuZXIiLCJuYW1lcyIsInRoIiwicGFyZW50RWxlbWVudCIsInRhYmxlIiwiY2xvc2VzdCIsImJvZHkiLCJxdWVyeVNlbGVjdG9yIiwiZm9vdGVyIiwicGFyZW50Tm9kZSIsImFwcGVuZENoaWxkIiwiY2VsbHMiLCJpdGVtQ291bnRSZWR1Y2VyIiwiZmxhdHRlbiIsImZsYXR0ZW5lZEFycmF5IiwiYWNjdW11bGF0b3IiLCJjdXJyZW50VmFsdWUiLCJ1dGlscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQUEsTUFBTUMsU0FBTixDQUFnQkMsU0FBaEIsR0FBNEIsWUFBVztBQUNuQyxNQUFNQyxVQUFVLEVBQWhCOztBQUVBLE9BQUtDLE9BQUwsQ0FBYSxVQUFTQyxRQUFULEVBQW1CO0FBQzlCQSxhQUFTRCxPQUFULENBQWlCLFVBQVNFLE9BQVQsRUFBa0I7QUFDakNILGNBQVFJLElBQVIsQ0FBYUQsT0FBYjtBQUNELEtBRkQ7QUFHRCxHQUpEOztBQU1BLFNBQU9ILE9BQVA7QUFDRCxDQVZIOztBQVlFLElBQU1LLE1BQU0sU0FBTkEsR0FBTSxNQUFPO0FBQ2YsU0FBTyxpQkFBUztBQUNkQyxZQUFRRCxHQUFSLENBQVlFLEdBQVosRUFBaUJDLEtBQWpC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ZUFBU0ssS0FBVDtBQUNQLEtBbEJrRjtBQW1CdEYsR0FuQkQ7QUFvQkQsQ0F0QkQ7O0FBd0JBLElBQU1XLG1CQUFtQixTQUFuQkEsZ0JBQW1CLENBQUNsRSxHQUFELEVBQU1DLElBQU4sRUFBZTtBQUN0Q0QsTUFBSUMsS0FBSzZDLFFBQUwsRUFBSixJQUF1QjlDLElBQUlDLEtBQUs2QyxRQUFMLEVBQUosS0FBd0IsQ0FBL0M7QUFDQTlDLE1BQUlDLEtBQUs2QyxRQUFMLEVBQUo7QUFDQSxTQUFPOUMsR0FBUDtBQUNELENBSkQ7O0FBTUEsSUFBTW1FLFVBQVUsU0FBVkEsT0FBVSxRQUFTO0FBQ3ZCLE1BQU1DLGlCQUFpQnBILE1BQU0rQyxNQUFOLENBQ3JCLFVBQVNzRSxXQUFULEVBQXNCQyxZQUF0QixFQUFvQztBQUNsQyxXQUFPRCxZQUFZL0UsTUFBWixDQUFtQmdGLFlBQW5CLENBQVA7QUFDRCxHQUhvQixFQUlyQixFQUpxQixDQUF2QjtBQU1BLFNBQU9GLGNBQVA7QUFDRCxDQVJEOztBQVVPLElBQU1HLHdCQUFRO0FBQ25CMUgsVUFEbUI7QUFFbkJJLDBCQUZtQjtBQUduQk8sY0FIbUI7QUFJbkJRLDhCQUptQjtBQUtuQk8sNEJBTG1CO0FBTW5Cb0Isb0JBTm1CO0FBT25CWix3Q0FQbUI7QUFRbkJhLG9EQVJtQjtBQVNuQk8sMENBVG1CO0FBVW5CRSx3QkFWbUI7QUFXbkJJLGdCQVhtQjtBQVluQk8sNENBWm1CO0FBYW5CQyw4QkFibUI7QUFjbkJJLHdCQWRtQjtBQWVuQkUsa0NBZm1CO0FBZ0JuQkssOEJBaEJtQjtBQWlCbkJvQiw0QkFqQm1CO0FBa0JuQmtCLG9DQWxCbUI7QUFtQm5CQztBQW5CbUIsQ0FBZCIsImZpbGUiOiJ1dGlscy5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGFubWluaW1hYy9jb2RlL3NuYXBkcmFnb24tcmVkdXgiLCJzb3VyY2VzQ29udGVudCI6WyJBcnJheS5wcm90b3R5cGUuY29uY2F0QWxsID0gZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICBcbiAgICB0aGlzLmZvckVhY2goZnVuY3Rpb24oc3ViQXJyYXkpIHtcbiAgICAgIHN1YkFycmF5LmZvckVhY2goZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICByZXN1bHRzLnB1c2goZWxlbWVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgXG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH07XG4gIFxuICBjb25zdCBsb2cgPSBtc2cgPT4geyBcbiAgICAgIHJldHVybiBhcnJheSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKG1zZywgYXJyYXkpOyBcbiAgICAgICAgcmV0dXJuIGFycmF5OyBcbiAgICAgIH1cbiAgICB9O1xuICBcbiAgY29uc3QgZW5jb2RlUXVlcnkgPSBxID0+IHsgXG4gICAgaWYocSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gcTtcbiAgICBpZihOdW1iZXIuaXNJbnRlZ2VyKHEpKSByZXR1cm4gcTtcbiAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHEudHJpbSgpKSBcbiAgfTtcbiAgXG4gIGNvbnN0IHRpbWVyID0gZnVuY3Rpb24gKHNpbmssIGRlbGF5KSB7XG4gICAgbGV0IGlkID0gbnVsbDtcbiAgICBCYWNvbi5mcm9tQmluZGVyKGZ1bmN0aW9uKCkge1xuICAgICAgaWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICAgICAgICBzaW5rKCk7XG4gICAgICAgIH0sIGRlbGF5KTsgICAgXG4gICAgICB9KVxuICAgIC5vblZhbHVlKGZ1bmN0aW9uKGVsZW1lbnQpIHsgY29uc29sZS5sb2coZWxlbWVudCkgfSk7XG4gICAgcmV0dXJuIGlkO1xuICB9O1xuICBcbiAgZnVuY3Rpb24gaW50ZXJ2YWxUaW1lciAoc2luaywgZGVsYXkpIHtcbiAgICB2YXIgdGltZXJJZDtcbiAgXG4gICAgdGhpcy5wYXVzZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aW1lcklkKTtcbiAgICB9O1xuICBcbiAgICB0aGlzLnJlc3VtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aW1lcklkKTtcbiAgICAgICAgdGltZXJJZCA9IHRpbWVyKHNpbmssIGRlbGF5KTtcbiAgICB9O1xuICBcbiAgICB0aGlzLmdldElkID0gZnVuY3Rpb24gKCl7XG4gICAgICByZXR1cm4gdGltZXJJZDtcbiAgICB9XG4gIFxuICAgIHRoaXMucmVzdW1lKCk7XG4gIFxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBcbiAgY29uc3Qgc2h1ZmZsZUFycmF5ID0gYXJyYXkgPT4ge1xuXG4gICAgaWYoIWFycmF5KSByZXR1cm47XG5cbiAgICB2YXIgY3VycmVudEluZGV4ID0gYXJyYXkubGVuZ3RoLCB0ZW1wb3JhcnlWYWx1ZSwgcmFuZG9tSW5kZXg7XG5cbiAgICAvLyBXaGlsZSB0aGVyZSByZW1haW4gZWxlbWVudHMgdG8gc2h1ZmZsZS4uLlxuICAgIHdoaWxlICgwICE9PSBjdXJyZW50SW5kZXgpIHtcblxuICAgICAgLy8gUGljayBhIHJlbWFpbmluZyBlbGVtZW50Li4uXG4gICAgICByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGN1cnJlbnRJbmRleCk7XG4gICAgICBjdXJyZW50SW5kZXggLT0gMTtcblxuICAgICAgLy8gQW5kIHN3YXAgaXQgd2l0aCB0aGUgY3VycmVudCBlbGVtZW50LlxuICAgICAgdGVtcG9yYXJ5VmFsdWUgPSBhcnJheVtjdXJyZW50SW5kZXhdO1xuICAgICAgYXJyYXlbY3VycmVudEluZGV4XSA9IGFycmF5W3JhbmRvbUluZGV4XTtcbiAgICAgIGFycmF5W3JhbmRvbUluZGV4XSA9IHRlbXBvcmFyeVZhbHVlO1xuICAgIH1cblxuICAgIHJldHVybiBbIC4uLmFycmF5IF07XG5cbiAgICAvLyByZXR1cm4gKGFyclxuICAgIC8vICAgLm1hcChhID0+IFtNYXRoLnJhbmRvbSgpLCBhXSlcbiAgICAvLyAgIC5zb3J0KChhLCBiKSA9PiBhWzBdIC0gYlswXSlcbiAgICAvLyAgIC5tYXAoYSA9PiBhWzFdKSlcbiAgfTtcbiAgXG4gIGNvbnN0IHJhbmRvbWlzZVNlbGVjdGlvbiA9IChzb3VyY2UsIHJlcXVpcmVkLCB6ZXJvQmFzZWQgPSBmYWxzZSkgPT4ge1xuICAgIGNvbnN0IHIgPSBzZWxlY3Rpb24gPT4ge1xuICAgICAgY29uc3QgYXJyID0gc2h1ZmZsZUFycmF5KHNvdXJjZSk7XG4gICAgICBzZWxlY3Rpb24gPSBzZWxlY3Rpb24uY29uY2F0KGFyci5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIGlmKGluZGV4ICsgc2VsZWN0aW9uLmxlbmd0aCA8IHJlcXVpcmVkKSB7XG4gICAgICAgICAgcmV0dXJuIHplcm9CYXNlZCA/IC0taXRlbSA6IGl0ZW07XG4gICAgICAgIH0gICAgICBcbiAgICAgIH0pKS5maWx0ZXIoaXRlbSA9PiBpdGVtICE9PSB1bmRlZmluZWQpO1xuICAgICAgcmV0dXJuIHNlbGVjdGlvbi5sZW5ndGggPCByZXF1aXJlZCA/IHIoc2VsZWN0aW9uKSA6IHNlbGVjdGlvbjtcbiAgICB9XG4gICAgcmV0dXJuIHIoW10pO1xuICB9O1xuICBcbiAgY29uc3QgbmV4dEl0ZW0gPSAoYXJyYXksIGluZGV4KSA9PiB7ICAgIFxuICAgIGNvbnN0IGl0ZW0gPSBhcnJheVtpbmRleCAlIGFycmF5Lmxlbmd0aF07XG4gICAgaXRlbS5pbmRleCA9IGluZGV4ICUgYXJyYXkubGVuZ3RoO1xuICAgIHJldHVybiBpdGVtO1xuICB9O1xuXG4gIGNvbnN0IGluc2VydE9iamVjdEJldHdlZW5JdGVtcyA9IChhcnJheSwgaW5zZXJ0KSA9PiB7XG4gICAgY29uc3QgaW5zZXJ0ZWRJbnRvQXJyYXkgPSBhcnJheS5yZWR1Y2UoIChhY2MsIGN1cnIsIGN1cnJJbmRleCkgPT4geyAgICAgICAgXG4gICAgICAgIHJldHVybiBhY2MuY29uY2F0KFtpbnNlcnQsIGN1cnJdKTtcbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuIGluc2VydGVkSW50b0FycmF5O1xuICB9O1xuXG4gIGNvbnN0IGRvdWJsZWRJdGVtc0luQXJyYXkgPSAoYXJyYXkpID0+IHtcbiAgICAgIGNvbnN0IGRvdWJsZWRBcnJheSA9IGFycmF5LnJlZHVjZSggKGFjYywgY3VyciwgY3VyckluZGV4KSA9PiB7ICAgICAgICBcbiAgICAgICAgICByZXR1cm4gYWNjLmNvbmNhdChbY3VyciwgY3Vycl0pO1xuICAgICAgfSwgW10pO1xuICAgICAgcmV0dXJuIGRvdWJsZWRBcnJheTtcbiAgfTtcblxuIGNvbnN0IG9ubHlVbmlxdWUgPSAodmFsdWUsIGluZGV4LCBzZWxmKSA9PiB7IFxuICAgIHJldHVybiBzZWxmLmluZGV4T2YodmFsdWUpID09PSBpbmRleDtcbn07XG5cbmNvbnN0IHNvcnRCeSA9IChhcnIsIHByb3AsIGRpciA9ICdhc2MnKSA9PiB7XG4gIHJldHVybiBkaXIgPT09ICdhc2MnIFxuICAgID8gYXJyLnNvcnQoKGEsIGIpID0+IHBhcnNlRmxvYXQoYVtwcm9wXSkgLSBwYXJzZUZsb2F0KGJbcHJvcF0pKVxuICAgIDogYXJyLnNvcnQoKGEsIGIpID0+IHBhcnNlRmxvYXQoYltwcm9wXSkgLSBwYXJzZUZsb2F0KGFbcHJvcF0pKTtcbn07XG5cbmNvbnN0IHNvcnRBbHBoYWJldGljYWxseUJ5ID0gKGFyciwgcHJvcCkgPT4ge1xuICBhcnIuc29ydChmdW5jdGlvbihhLCBiKXtcbiAgICBpZihhW3Byb3BdIDwgYltwcm9wXSkgcmV0dXJuIC0xO1xuICAgIGlmKGFbcHJvcF0gPiBiW3Byb3BdKSByZXR1cm4gMTtcbiAgICByZXR1cm4gMDtcbiAgfSk7XG4gIHJldHVybiBhcnI7XG59O1xuXG5jb25zdCBjYWxjSXRlbUluZGV4ID0gKG9mZlNldCwgbW9kdWxlU2l6ZSwgaW5kZXgpID0+IHtcbiAgY29uc3QgaXRlbUluZGV4ID0gXG4gICAgICAgIChvZmZTZXQgKyBpbmRleCkgJSBtb2R1bGVTaXplID09PSAwIFxuICAgICAgICAgID8gb2ZmU2V0XG4gICAgICAgICAgOiBvZmZTZXQgKyAob2ZmU2V0ICsgaW5kZXgpICUgbW9kdWxlU2l6ZTtcbiAgcmV0dXJuIGl0ZW1JbmRleDtcbn07XG5cbmNvbnN0IGlzSXRlcmFibGUgPSBhcnJheSA9PiB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGFycmF5KSAmJiBhcnJheS5sZW5ndGggIT09IDA7XG59O1xuXG5jb25zdCBjYXBpdGFsaXNlRmlyc3QgPSBzdHIgPT4ge1xuICByZXR1cm4gc3RyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyLnNsaWNlKDEpO1xufTtcblxuY29uc3QgY2FwaXRhbGlzZUFsbCA9IHN0ciA9PiB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXFx3XFxTKi9nLCBmdW5jdGlvbih0eHQpe3JldHVybiB0eHQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB0eHQuc3Vic3RyKDEpLnRvTG93ZXJDYXNlKCk7fSk7XG59O1xuXG5jb25zdCBnZXRDZWxsVmFsdWUgPSBmdW5jdGlvbih0ciwgaWR4KXsgXG4gIGNvbnN0IHZhbHVlVG9Tb3J0T24gPSB0ci5jaGlsZHJlbltpZHhdLmlubmVyVGV4dCB8fCB0ci5jaGlsZHJlbltpZHhdLmNsYXNzTGlzdFswXSB8fCB0ci5jaGlsZHJlbltpZHhdLnRleHRDb250ZW50OyBcbiAgcmV0dXJuIHZhbHVlVG9Tb3J0T247XG59XG5cbmNvbnN0IGNvbXBhcmVyID0gZnVuY3Rpb24oaWR4LCBhc2MpIHsgcmV0dXJuIGZ1bmN0aW9uKGEsIGIpIHsgcmV0dXJuIGZ1bmN0aW9uKHYxLCB2Mikge1xuICAgICAgICByZXR1cm4gdjEgIT09ICcnICYmIHYyICE9PSAnJyAmJiAhaXNOYU4odjEpICYmICFpc05hTih2MikgPyB2MSAtIHYyIDogdjEudG9TdHJpbmcoKS5sb2NhbGVDb21wYXJlKHYyKTtcbiAgICB9KGdldENlbGxWYWx1ZShhc2MgPyBhIDogYiwgaWR4KSwgZ2V0Q2VsbFZhbHVlKGFzYyA/IGIgOiBhLCBpZHgpKTtcbn19O1xuXG5jb25zdCBtYWtlU29ydGFibGUgPSAoZG9jdW1lbnQsIGNhbGxiYWNrKSA9PiB7XG5cbiAgQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCd0aCA+IHNwYW46bnRoLWNoaWxkKDEpJykpLmZvckVhY2goZnVuY3Rpb24oc3ApIHsgc3AuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBjb25zdCBuYW1lcyA9IFtdO1xuICAgICAgICAgIHZhciB0aCA9IHRoaXMucGFyZW50RWxlbWVudDtcbiAgICAgICAgICBpZih0aC5jbGFzc0xpc3RbMF0gPT09ICdub3Qtc29ydGFibGUnKSByZXR1cm47XG4gICAgICAgICAgdmFyIHRhYmxlID0gdGguY2xvc2VzdCgndGFibGUnKTtcbiAgICAgICAgICB2YXIgYm9keSA9IHRhYmxlLnF1ZXJ5U2VsZWN0b3IoJ3Rib2R5Jyk7XG4gICAgICAgICAgdmFyIGZvb3RlciA9IHRhYmxlLnF1ZXJ5U2VsZWN0b3IoJ3Rmb290Jyk7ICAgICAgICAgIFxuXG4gICAgICAgICAgQXJyYXkuZnJvbSh0YWJsZS5xdWVyeVNlbGVjdG9yQWxsKCd0cjpudGgtY2hpbGQobisyKScpKVxuICAgICAgICAgICAgICAuc29ydChjb21wYXJlcihBcnJheS5mcm9tKHRoLnBhcmVudE5vZGUuY2hpbGRyZW4pLmluZGV4T2YodGgpLCB0aGlzLmFzYyA9ICF0aGlzLmFzYykpXG4gICAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uKHRyKSB7IFxuICAgICAgICAgICAgICAgIGlmKHRyICE9PSBmb290ZXIpIHtcbiAgICAgICAgICAgICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQodHIpO1xuICAgICAgICAgICAgICAgICAgbmFtZXMucHVzaCh0ci5jZWxsc1swXS5pZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTsgICAgICAgIFxuXG4gICAgICAgICAgICAgIGNhbGxiYWNrKG5hbWVzKTtcbiAgICAgIH0pXG4gIH0pO1xufTtcblxuY29uc3QgaXRlbUNvdW50UmVkdWNlciA9IChhY2MsIGN1cnIpID0+IHtcbiAgYWNjW2N1cnIudG9TdHJpbmcoKV0gPSBhY2NbY3Vyci50b1N0cmluZygpXSB8fCAwO1xuICBhY2NbY3Vyci50b1N0cmluZygpXSsrO1xuICByZXR1cm4gYWNjO1xufTtcblxuY29uc3QgZmxhdHRlbiA9IGFycmF5ID0+IHtcbiAgY29uc3QgZmxhdHRlbmVkQXJyYXkgPSBhcnJheS5yZWR1Y2UoXG4gICAgZnVuY3Rpb24oYWNjdW11bGF0b3IsIGN1cnJlbnRWYWx1ZSkge1xuICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yLmNvbmNhdChjdXJyZW50VmFsdWUpO1xuICAgIH0sXG4gICAgW11cbiAgKTtcbiAgcmV0dXJuIGZsYXR0ZW5lZEFycmF5O1xufVxuXG5leHBvcnQgY29uc3QgdXRpbHMgPSB7XG4gIGxvZyxcbiAgZW5jb2RlUXVlcnksXG4gIHRpbWVyLCBcbiAgaW50ZXJ2YWxUaW1lcixcbiAgc2h1ZmZsZUFycmF5LFxuICBuZXh0SXRlbSxcbiAgcmFuZG9taXNlU2VsZWN0aW9uLFxuICBpbnNlcnRPYmplY3RCZXR3ZWVuSXRlbXMsXG4gIGRvdWJsZWRJdGVtc0luQXJyYXksXG4gIG9ubHlVbmlxdWUsXG4gIHNvcnRCeSxcbiAgc29ydEFscGhhYmV0aWNhbGx5QnksXG4gIGNhbGNJdGVtSW5kZXgsXG4gIGlzSXRlcmFibGUsXG4gIGNhcGl0YWxpc2VGaXJzdCxcbiAgY2FwaXRhbGlzZUFsbCxcbiAgbWFrZVNvcnRhYmxlLFxuICBpdGVtQ291bnRSZWR1Y2VyLFxuICBmbGF0dGVuXG59OyJdfQ==\n\n//# sourceURL=webpack:///./src/utils/utils.js?");

/***/ })

/******/ });