{"version":3,"sources":["webpack://learn-the-planet/./src/ui/quick-fire-modal/quick-fire-api.js","webpack://learn-the-planet/./src/ui/quick-fire-modal/quick-fire-logic.js","webpack://learn-the-planet/./src/ui/quick-fire-modal/quick-fire-ui.js","webpack://learn-the-planet/./src/ui/quick-fire-modal/quick-fire.js","webpack://learn-the-planet/./src/ui/fixtures/glossary-template.html","webpack://learn-the-planet/./src/ui/quick-fire-modal/quick-fire-filters-template.html","webpack://learn-the-planet/./src/ui/quick-fire-modal/quick-fire-questions-template.html","webpack://learn-the-planet/./src/ui/quick-fire-modal/quick-fire-summary-template.html"],"names":["getItems","includeTechnicalTerms","glossary","store","items","contains","definition","selectedItems","item","getBranches","branches","name","count","length","getQuickFire","collection","taxa","filter","iconicTaxa","option","key","value","quickFire","index","isComplete","type","termScore","total","correct","incorrect","isCorrect","isIncorrect","rounds","passes","fails","poolSize","terms","onClickFiltersLinkListeners","onClickGlossaryLinkListeners","lessonId","id","iconicTaxon","taxon","actions","quickFireAPI","selectAnswers","take","quickFireItems","itemCount","requiredItems","itemsToAdd","sp","i","answers","utils","term","quickFireLogic","renderResponse","updateBranchCounts","branchOptions","branchBadge","updateTaxonCounters","taxonCounters","taxonBadge","updateTotalCounts","counters","counter","input","parseInt","scoreMultipleChoice","answer","quickFireMessage","scoreTextEntry","brackets","acceptableAnswers","acceptable","quickFireInput","timer","setTimeout","continueQuickFireBtn","readyTemplate","template","document","modal","parent","updateHeaders","links","filters","questions","hide","loadGlossary","quickFireActions","loadFilters","handleGlossaryLink","once","handleFiltersLink","enums","quickFireUI","headers","init","args","resetQuickFire","quickFireFilters","state","clone","linkFromLesson","options","renderTemplate","branchCounters","e","updateArray","arr","getFilterTaxa","chkBox","selectedTaxon","updatedTaxa","getIncludeTechnicalTerms","createQuickFireBtn","quickFireOptions","branch","checkedBranches","elem","b","technical","reset","question","answered","layouts","layout","Array","button","quickFireInputContainer","subscription","clearTimeout","check","event","hint","summary","review","getTermsGlossary","definitions","def","iconicTaxaKeys","pass","fail","score","tabs","tab","t","summaryText","scoreSummary","continueReview","quickFireRevision","quickFireQuestions","quickFireHandlers","quickFireGlossary"],"mappings":"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","file":"src_ui_quick-fire-modal_quick-fire_js.bundle.js","sourcesContent":["import { contains } from 'ramda';\n\nimport { actions } from 'redux/actions/action-creators';\nimport { store } from 'redux/store';\n\nconst getItems = (taxa, includeTechnicalTerms = false) => {\n    \n    const glossary = store.getState().glossary;\n\n    const items = glossary.filter(definition => contains(definition.taxon, taxa));\n\n    let selectedItems = [];\n\n    includeTechnicalTerms\n        ? selectedItems = items\n        : selectedItems = items.filter(item => item.technical !== 'true');\n\n    return selectedItems.filter(item => contains(item.taxon, taxa));\n};\n\nconst getBranches = items => {\n    \n    let branches = [ ...new Set(items.map(item => item.branch)) ];\n        branches = branches.map(branch => {\n            return {\n                name: branch,\n                count: items.filter(item => item.branch == branch).length\n            }\n          });\n    return branches;\n};\n\nconst getQuickFire = (glossary, type, collection) => {\n\n    const items = collection.terms\n            ? glossary.filter(definition => contains(definition.id, collection.terms))\n            : glossary;\n\n    const taxa = [ ...new Set(items.map(definition => definition.taxon))];\n\n    const filter = {\n          iconicTaxa: taxa,\n          option: {\n                key: \"0\",\n                value: \"multiple choice\" // depends on type???\n          }\n    };\n    \n    const quickFire = {\n        index: 0,\n        isComplete: false,\n        items,\n        count: items.length,\n        filter,\n        type,\n        termScore: {\n            total: 0,\n            correct: 0,\n            incorrect: 0,\n            isCorrect: null,\n            isIncorrect: null,\n            rounds: [],\n            passes: [],\n            fails: []\n        },\n        poolSize: items.length,\n        terms: collection.terms,\n        onClickFiltersLinkListeners: [],\n        onClickGlossaryLinkListeners: [],\n        lessonId : collection.id\n    };\n\n    quickFire.filter.taxa = filter.iconicTaxa.map(taxon => {\n        const iconicTaxon = {\n            name: taxon,\n            count: items.filter(item => item.taxon === taxon).length\n        }\n        return iconicTaxon;\n    });\n\n    quickFire.filter.taxa = quickFire.filter.taxa.filter(taxon => taxon.count > 0);\n\n    actions.boundCreateQuickFire(quickFire);\n\n    return quickFire;\n};\n\nexport const quickFireAPI = {\n    getItems,\n    getBranches,\n    getQuickFire\n};","import { contains, take } from 'ramda';\n\nimport { utils } from 'utils/utils';\n\nconst selectAnswers = (quickFire, quickFireItems) => {\n\n    quickFire.spareItems = quickFire.spareItems || take(5, quickFireItems);\n\n    quickFire.question = quickFireItems.splice(0,1)[0];\n\n    let items = quickFireItems.filter(item => item.branch === quickFire.question.branch);\n\n    const itemCount = items ? items.length : 0;\n    const requiredItems = 3;\n\n    if (itemCount <= requiredItems) {\n        const itemsToAdd = take((requiredItems - itemCount), quickFire.spareItems.filter(sp => !contains(sp.term, items.map(i => i.term)) && sp.term !== quickFire.question.term ));\n              itemsToAdd.forEach(item => items.push(item));\n    }\n\n    let answers = take(3, items);\n        answers.push(quickFire.question);\n        answers = utils.shuffleArray(answers);\n        answers = answers.map((item, index) => {\n            return {\n                term: item.term,\n                index\n            };\n        });\n\n    return answers;\n};\n\nexport const quickFireLogic = {\n    selectAnswers\n};","import { contains } from 'ramda';\n\nimport { store } from 'redux/store';\nimport { enums } from 'ui/helpers/enum-helper';\n\nconst renderResponse = (isCorrect, term) => {\n    return isCorrect\n    ? `<span class=\"centred-block icon\"><i class=\"fas fa-check extra-large-text correct-answer-color margin-right\"></i>That is correct.</span>`\n    : `<span class=\"centred-block icon\"><i class=\"fas fa-times extra-large-text incorrect-answer-color margin-right\"></i>The correct answer is <span class=\"answer-response half-margin-left\">'${term}'.</span></span>`;\n\n};\n\nconst updateBranchCounts = (quickFire, branchOptions) => {\n\n    const items = quickFire.terms ? quickFire.items.filter(item => contains(item.id, quickFire.terms)) : quickFire.items;\n\n    branchOptions.forEach(branchBadge => {\n    branchBadge.innerHTML = items.filter(item => item.branch === branchBadge.dataset.name).length;\n    });\n};\n\nconst updateTaxonCounters = (quickFire, taxonCounters, includeTechnicalTerms) => {\n\n    const items = quickFire.terms ? quickFire.items.filter(item => contains(item.id, quickFire.terms)) : quickFire.items;\n\n    taxonCounters.forEach(taxonBadge => {\n        taxonBadge.innerHTML = includeTechnicalTerms\n            ? items.filter(item => item.taxon === taxonBadge.dataset.taxon).length\n            : items.filter(item => item.taxon === taxonBadge.dataset.taxon && !item.technical).length;\n    });\n\n    return includeTechnicalTerms\n        ? items\n        : items.filter(item => !item.technical);\n};\n\nconst updateTotalCounts = (quickFire, input, counters, branchCounters, taxonCounters, includeTechnicalTerms = false) => {\n\n    updateBranchCounts(quickFire, branchCounters);\n    const terms = updateTaxonCounters(quickFire, taxonCounters, includeTechnicalTerms);\n\n    quickFire.count = terms.length;\n\n    counters.forEach(counter => {\n        counter.innerHTML = quickFire.count;\n    });\n    \n    input.value = quickFire.count;\n    quickFire.poolSize = parseInt(input.value);\n};\n\nconst scoreMultipleChoice = (quickFire, answer, quickFireMessage) => {\n\n    const isCorrect = answer === quickFire.question.term;\n\n    quickFire.question.answer = answer;\n        \n    quickFire.termScore.total++;\n\n    if(isCorrect) {\n        quickFire.termScore.correct++;\n        quickFire.termScore.isCorrect = true;\n        quickFire.termScore.isIncorrect = false;\n        quickFire.termScore.passes.push(quickFire.question);\n    } else {\n        quickFire.termScore.incorrect++;\n        quickFire.termScore.isCorrect = false;\n        quickFire.termScore.isIncorrect = true;\n        quickFire.termScore.fails.push(quickFire.question);\n    }\n\n    quickFireMessage.innerHTML = renderResponse(isCorrect, quickFire.question.term.toLowerCase());\n};\n\nconst scoreTextEntry = (quickFire, quickFireInput, quickFireMessage, timer, continueQuickFireBtn) => {\n\n    if (quickFire.filter.option.key === '1') {\n\n        const brackets = /\\(.+?\\)/;\n\n        const term = quickFire.question.term;\n\n        const acceptableAnswers = term.split(',').map(answer => {\n            \n            let acceptable = answer;\n                acceptable = acceptable.replace(brackets, '');\n                acceptable = acceptable.trim();\n                acceptable = acceptable.toLowerCase();\n\n            return acceptable;\n        });\n        \n        const isCorrect = contains(quickFireInput.value.trim().toLowerCase(), acceptableAnswers);\n        \n        quickFire.termScore.total++;\n        \n        if (isCorrect) {\n            quickFire.termScore.correct++;\n            quickFire.termScore.passes.push(quickFire.question);\n        }\n        else {\n            quickFire.termScore.incorrect++;\n            quickFire.termScore.fails.push(quickFire.question);\n        }\n        \n        quickFireMessage.innerHTML = renderResponse(isCorrect, quickFire.question.term.toLowerCase());\n\n        timer = setTimeout(() => {\n            continueQuickFireBtn.click();\n        }, store.getState().config.callbackTime + 500);\n    }\n\n    return timer;\n};\n\nconst readyTemplate = headerTemplate => {\n\n    const template = document.createElement('template');\n          template.innerHTML = headerTemplate;\n\n    const modal = document.querySelector('#glossaryModal');\n\n    const parent = modal.querySelector('.js-modal-text');\n          parent.innerHTML = '';   \n\n    return { template, modal, parent };\n};\n\nconst updateHeaders = (screen, links, getQuickFire, quickFireActions) => {\n\n    const { glossary, filters, questions } = links;\n\n    const hide = 'hide-important';\n\n    const quickFire = getQuickFire();\n\n    const loadGlossary = e => {\n        quickFireActions.quickFireGlossary(quickFire.items);\n        if(quickFire.linkFromLesson) {\n            questions.classList.remove(hide);\n            filters.classList.add(hide);\n        } else {\n            filters.classList.remove(hide);\n        }\n    };\n\n    const loadFilters = e => {\n        quickFireActions.quickFireFilters(quickFire.linkFromLesson);\n    };\n\n    const handleGlossaryLink = () => {\n\n        quickFire.onClickGlossaryLinkListeners = quickFire.onClickGlossaryLinkListeners || [];\n\n        if(quickFire.onClickGlossaryLinkListeners.length < 1) {\n            glossary.addEventListener('click', loadGlossary, { once: true });\n            quickFire.onClickGlossaryLinkListeners.push('filters');\n        }\n    };\n\n    const handleFiltersLink = () => {\n\n        quickFire.onClickFiltersLinkListeners = quickFire.onClickFiltersLinkListeners || [];\n\n        if(quickFire.onClickFiltersLinkListeners.length < 1) {\n            filters.addEventListener('click', loadFilters, { once: true }, true);\n            quickFire.onClickFiltersLinkListeners.push('filters');\n        }\n    };\n    \n    switch(screen) {        \n        case enums.quickFireStep.FILTERS:\n            filters.classList.add(hide);\n            glossary.classList.remove(hide);\n            handleGlossaryLink();\n        break;\n            \n        case enums.quickFireStep.QUESTIONS:\n            filters.classList.remove(hide);\n            filters.innerHTML = 'Vocab filter';\n            handleGlossaryLink();\n            handleFiltersLink();\n        break;\n\n        case enums.quickFireStep.GLOSSARY:\n            filters.classList.remove(hide);\n            filters.innerHTML = 'Vocab filter';\n            questions.classList.add(hide);\n            handleFiltersLink();\n        break;\n    }\n};\n\nexport const quickFireUI = {\n    updateTotalCounts,\n    updateHeaders,\n    scoreMultipleChoice,\n    scoreTextEntry,\n    readyTemplate\n};","import { contains, clone } from 'ramda';\n\nimport { store } from 'redux/store';\nimport { utils } from 'utils/utils';\nimport { actions } from 'redux/actions/action-creators';\nimport { subscription } from 'redux/subscriptions';\nimport { iconicTaxa  } from 'api/snapdragon/iconic-taxa';\nimport { enums } from 'ui/helpers/enum-helper';\nimport { renderTemplate } from 'ui/helpers/templating';\nimport { quickFireAPI } from 'ui/quick-fire-modal/quick-fire-api';\nimport { quickFireUI } from 'ui/quick-fire-modal/quick-fire-ui';\nimport { quickFireLogic } from 'ui/quick-fire-modal/quick-fire-logic';\n\nimport glossaryTemplate from 'ui/fixtures/glossary-template.html';\nimport templateCreateQuickFire from 'ui/quick-fire-modal/quick-fire-filters-template.html';\nimport templateQuestionQuickFire from 'ui/quick-fire-modal/quick-fire-questions-template.html';\nimport templateSummaryQuickFire from 'ui/quick-fire-modal/quick-fire-summary-template.html';\n\nconst headers = (step, quickFire) => {\n\n    const getQuickFire = () => quickFire;\n\n    const modal = document.querySelector('#glossaryModal');\n\n    const links = { \n        glossary: modal.querySelector('.js-modal-text-title'),\n        filters: modal.querySelector('.js-quick-fire-filters'),\n        questions: modal.querySelector('.js-quick-fire-questions')\n    };\n\n    quickFireUI.updateHeaders(step, links, getQuickFire, quickFireActions);\n};\n\nconst filters = async linkFromLesson => {\n\n    const args = await init();\n\n    const { template, modal, parent } = quickFireUI.readyTemplate(templateCreateQuickFire);\n\n    headers(enums.quickFireStep.FILTERS, { items: args.items, onClickFiltersLinkListeners: [], onClickGlossaryLinkListeners: [] });\n\n    let { items, type, filter } = args;\n\n    const resetQuickFire = () => {\n        actions.boundUpdateQuickFire(quickFireAPI.getQuickFire(store.getState().glossary, enums.quickFireType.DEFINITION, {}));\n        quickFireFilters(quickFire.linkFromLesson);\n    };\n\n    let state = store.getState().quickFire || quickFireAPI.getQuickFire(items, filter, type);\n    let quickFire = clone(state);\n        quickFire = quickFire.isComplete ? resetQuickFire() : quickFire;\n        quickFire.linkFromLesson = linkFromLesson || false;\n        quickFire.onClickFiltersLinkListeners = [];\n        quickFire.onClickGlossaryLinkListeners = [];\n\n    actions.boundUpdateQuickFire(quickFire);\n\n    const options = [\n        { key: 0, value: 'multiple choice' },\n        { key: 1, value: 'text entry' },\n        // { key: 2, value: 'multiple choice followed by text entry' },\n        // { key: 3, value: 'mixed multiple choice and text entry' },\n    ];\n\n    const branches = quickFireAPI.getBranches(items);\n\n    renderTemplate({ quickFire, options, branches }, template.content, parent);\n\n    const counters = document.querySelectorAll('.js-quick-fire-count');\n    const branchCounters = document.querySelectorAll('.js-quick-fire-branches li input');\n    const taxonCounters = document.querySelectorAll('.js-quick-fire-taxa li > span');\n\n    const input = document.querySelector('.js-input-quick-fire');\n          input.addEventListener('input', e => {\n            quickFire.poolSize = parseInt(e.target.value);          \n          });\n          setTimeout(() => {\n            input.focus();\n          }, 250);\n\n    quickFire.poolSize = parseInt(input.value);\n\n    const updateArray = (arr, elem) => {\n        if(arr.find(e => e === elem)) {\n            return arr.filter(iconicTaxon => iconicTaxon !== elem); \n        } else {\n            arr.push(elem);\n            return arr;\n        }\n    };\n\n    const getFilterTaxa = () => quickFire.filter.iconicTaxa;\n\n    const taxa = document.querySelectorAll('.js-quick-fire-taxa li');\n          taxa.forEach(taxon => {\n\n              const chkBox = taxon.querySelector('input');\n\n              if(!contains(taxon.dataset.name, quickFire.filter.iconicTaxa)) {\n                  chkBox.click();\n              }\n\n              taxon.addEventListener('change', async e => {\n                const selectedTaxon = e.target.id;\n                const updatedTaxa = updateArray(getFilterTaxa(getIncludeTechnicalTerms), selectedTaxon);\n                quickFire.filter.iconicTaxa = updatedTaxa;\n                quickFire.items = quickFireAPI.getItems(updatedTaxa);\n                quickFireUI.updateTotalCounts(quickFire, input, counters, branchCounters, taxonCounters, getIncludeTechnicalTerms());\n              });\n          });\n\n    let includeTechnicalTerms = quickFire.lessonId ? true : false;\n\n    const getIncludeTechnicalTerms = () => includeTechnicalTerms;\n      \n    quickFireUI.updateTotalCounts(quickFire, input, counters, branchCounters, taxonCounters, getIncludeTechnicalTerms());\n\n    const createQuickFireBtn = document.querySelector('.js-create-quick-fire');\n          createQuickFireBtn.innerHTML = quickFire.termScore.total === 0 ? 'Start vocab review' : 'Continue your vocab review';\n          createQuickFireBtn.addEventListener('click', e => {\n            questions(quickFire);\n          }, { once: true });\n\n    const quickFireOptions = document.querySelectorAll('.js-quick-fire-filter-options button');\n    \n    quickFire.filter.option.key === \"0\"\n      ? quickFireOptions[0].click()\n      : quickFireOptions[1].click();\n    \n    quickFireOptions[parseInt(quickFire.filter.option.key)].classList.add('active');\n\n    quickFireOptions[0].addEventListener('click', e => {\n      e.preventDefault();\n      if(!utils.hasClass(e.target, 'active')) {\n        e.target.classList.add('active');\n        quickFire.filter.option = {\n            key: e.target.dataset.key,\n            value: e.target.dataset.value\n        };\n        quickFireOptions[1].classList.remove('active');\n      }\n    });        \n\n    quickFireOptions[1].addEventListener('click', e => {\n      e.preventDefault();\n      if(!utils.hasClass(e.target, 'active')) {\n        e.target.classList.add('active');\n        quickFire.filter.option = {\n            key: e.target.dataset.key,\n            value: e.target.dataset.value\n        };\n        quickFireOptions[0].classList.remove('active');\n      }\n    });        \n\n    const branchOptions = document.querySelectorAll('.js-quick-fire-branches li');\n\n    if(quickFire.filter.branches) {\n\n        branchOptions.forEach(branch => {\n            if(!contains(branch.dataset.key, quickFire.filter.branches)) {\n                branch.click();\n            }\n        });    \n    }\n\n    branchOptions.forEach(branch => {\n        branch.addEventListener('click', e => {\n        setTimeout(async() => {\n                let checkedBranches = Array.from(branchOptions).filter(b => elem.hasClass(b, 'active'));\n                    checkedBranches = checkedBranches.map(b => b.dataset.key);\n                quickFire.filter.branches = checkedBranches;\n                quickFire.items = await quickFireAPI.getItems(quickFire.filter.iconicTaxa);\n                quickFire.items = quickFire.items.filter(item => contains(item.branch, checkedBranches));\n                quickFireUI.updateTotalCounts(quickFire, input, counters, branchCounters, taxonCounters, getIncludeTechnicalTerms());\n            });\n        });\n    });\n\n    const technical = document.querySelector('.js-quick-fire-technical');\n          technical.addEventListener('change', async e => {\n            includeTechnicalTerms = e.target.checked;\n            quickFire.filter.includeTechnicalTerms = includeTechnicalTerms;\n            quickFire.items = quickFire.items || await quickFireAPI.getItems(quickFire.filter.iconicTaxa, includeTechnicalTerms);\n            quickFireUI.updateTotalCounts(quickFire, input, counters, branchCounters, taxonCounters, getIncludeTechnicalTerms());\n          });\n\n    if(includeTechnicalTerms) technical.click();\n\n    const reset = document.querySelector('.js-quick-fire-reset');\n          reset.addEventListener('click', e => {\n            resetQuickFire();\n          });\n};\n\nconst questions = state => {\n\n    let quickFire;\n\n    if(!state) return;\n    else quickFire = clone(state);\n\n    quickFire.onClickGlossaryLinkListeners = [];\n\n    headers(enums.quickFireStep.QUESTIONS, quickFire);\n\n    const { template, modal, parent } = quickFireUI.readyTemplate(templateQuestionQuickFire);\n\n    let timer;    \n\n    if(quickFire.poolSize > quickFire.termScore.total) {\n\n        let answers = quickFireLogic.selectAnswers(quickFire, utils.shuffleArray(quickFire.items));\n\n        renderTemplate({ question: quickFire.question, \n                answers, total: quickFire.termScore.total + 1, \n                count: quickFire.poolSize,\n                correct: quickFire.termScore.correct, \n                answered: quickFire.termScore.total \n        }, template.content, parent);\n\n        const layouts = document.querySelectorAll('.js-quick-layouts');\n              layouts.forEach(layout => {\n                  layout.classList.add('hide-important');\n                  if(layout.id === quickFire.filter.option.key) layout.classList.remove('hide-important');  \n              });\n\n        const quickFireMessage = document.querySelector('.js-quick-fire-message');\n\n        const options = Array.from(document.querySelectorAll('.js-quick-fire-options > li'));\n              options.forEach(option => {\n                option.addEventListener('click', e => {\n                    const button = e.target;\n                    const term = button.querySelector('span').innerHTML;\n                    const answer = term;\n                    quickFireUI.scoreMultipleChoice(quickFire, answer, quickFireMessage);\n                    continueQuickFireBtn.disabled = false;\n                    if(quickFire.termScore.isIncorrect) {\n                        option.classList.add('snap-alert');\n                    }\n                    options.forEach(option => {\n                        if(option.id === quickFire.question.term) {\n                            option.classList.add('snap-success');\n                        }\n                    });\n                    timer = setTimeout(() => {\n                        continueQuickFireBtn.click();\n                    }, store.getState().config.callbackTime);\n                }, { once: true });\n              });\n              setTimeout(() => {\n                options[0].querySelector('button').focus();\n              }, 500);\n\n        const quickFireInputContainer = modal.querySelector('.js-quick-fire-text-entry');\n        const quickFireInput = modal.querySelector('.js-quick-fire-text-entry input');\n        \n        if(quickFire.filter.option.key === '1') {\n            quickFireInputContainer.classList.remove('hide-important');\n            quickFireInput.focus();\n        }\n        \n        const continueQuickFireBtn = document.querySelector('.js-continue-quick-fire-btn');\n              continueQuickFireBtn.addEventListener('click', e => {\n                continueQuickFireBtn.setAttribute(\"disabled\", true);\n                quickFire.items = quickFire.items.filter(item => item.term !== quickFire.question.term);\n                subscription.add(quickFireQuestions, 'quickFire', 'modal');\n                actions.boundUpdateQuickFire(quickFire);\n                clearTimeout(timer);        \n              }, { once: true });\n\n        let check = true;\n\n        quickFireInput.addEventListener('keydown', event => {\n            if (event.keyCode == 9 && check) {\n                check = false;\n                timer = quickFireUI.scoreTextEntry(quickFire, quickFireInput, quickFireMessage, timer, continueQuickFireBtn);\n                continueQuickFireBtn.disabled = false;\n            }\n        });\n\n        quickFireInput.addEventListener('keypress', event => {\n            if (event.keyCode == 13 && check) {\n                check = false;\n                timer = quickFireUI.scoreTextEntry(quickFire, quickFireInput, quickFireMessage, timer, continueQuickFireBtn);\n                continueQuickFireBtn.disabled = false;\n            }            \n        });\n\n        quickFireInput.addEventListener('blur', e => {\n            if(check && e.target.value.length > 2) {\n                check = false;\n                timer = quickFireUI.scoreTextEntry(quickFire, quickFireInput, quickFireMessage, timer, continueQuickFireBtn);\n                continueQuickFireBtn.disabled = false;\n            }\n        });\n\n        if((quickFire.question.term.split(' ').length > 1 || quickFire.question.term.indexOf('(') === 0) && quickFire.filter.option.key === '1') {\n            const hint = modal.querySelector('.js-quick-fire-hint');\n                  hint.classList.remove('hide');\n        }\n\n    } else {\n        summary(quickFire);        \n    }\n    \n    const review = modal.querySelector('.js-quick-review-progress');\n    if(review) {\n          review.addEventListener('click', e => {\n            summary(quickFire);\n          }, { once: true });\n    }\n};\n\nconst getTermsGlossary = (glossary, terms) => {\n\n    if(!terms || terms.length === 0) return glossary;\n\n    const definitions = [];\n\n    terms.forEach(term => {\n        const definition = glossary.find(def => def.id === term);\n        definitions.push(definition);\n    });\n\n    return definitions.filter(term => term);\n}\n\nconst definitions = async terms => {\n\n    const { template, modal, parent } = quickFireUI.readyTemplate(glossaryTemplate);\n\n    const quickFire = store.getState().quickFire || quickFireAPI.getQuickFire(terms, enums.quickFireType.DEFINITION, { collection: {} });\n\n    headers(enums.quickFireStep.GLOSSARY, quickFire);\n\n    parent.innerHTML = '';\n\n    const glossary = getTermsGlossary(terms, quickFire.terms);\n\n    renderTemplate({ glossary }, template.content, parent);\n};\n\nconst init = async () => {\n\n    let taxa = [];\n    let iconicTaxaKeys = Object.keys(iconicTaxa).map(key => key.toLowerCase());\n        iconicTaxaKeys.push('common');\n        iconicTaxaKeys.forEach(taxon => {\n            taxa.push(taxon);\n        });\n\n    const { quickFire } = store.getState();\n\n    const items = quickFire.items || await quickFireAPI.getItems(taxa);\n        \n    const args = {\n        items,\n        type: enums.quickFireType.DEFINITION,\n        filter: {\n            iconicTaxa: taxa\n        }\n    };\n    return args;\n};\n\nconst summary = quickFire => {\n\n    const { template, modal, parent } = quickFireUI.readyTemplate(templateSummaryQuickFire);\n\n    const passes = quickFire.termScore.passes;\n          passes.forEach((pass, i) => {\n            pass.index = i;\n            pass.wiki = pass.wiki || '';\n            pass.showWikiClass = pass.wiki.length > 0 ? '' : 'hide-important'\n          });\n    const fails = quickFire.termScore.fails;\n          fails.forEach((fail, i) => {\n            fail.index = i;\n            fail.wiki = fail.wiki || '';\n            fail.showWikiClass = fail.wiki.length > 0 ? '' : 'hide-important';\n          });\n\n    renderTemplate({ score: quickFire.termScore, passes, fails }, template.content, parent);\n\n    const answers = modal.querySelectorAll('.js-quick-review-answers');\n    const tabs = modal.querySelectorAll('.js-quick-review-tabs a');\n    \n    tabs.forEach(tab => {\n        tab.addEventListener('click', e => {\n            const type = e.target.id;\n            answers.forEach(t => {\n                t.dataset.type === type\n                    ? t.classList.remove('hide-important')\n                    : t.classList.add('hide-important');\n            });\n        });\n    });\n\n    const summaryText = modal.querySelector('.js-quick-fire-summary div:nth-child(1) > span');\n    const scoreSummary = modal.querySelector('.js-score-text-summary');\n    const continueReview = modal.querySelector('.js-quick-review-continue-review');\n\n    quickFire.isComplete = quickFire.poolSize === quickFire.termScore.total;\n\n    if(quickFire.isComplete) {\n        summaryText.innerHTML = '<span class=\"emphasis\">You have answered all of the questions correctly.</span>';\n        scoreSummary.classList.add('modal-background-relief-emphasis');\n        scoreSummary.innerHTML = `You scored ${quickFire.termScore.correct} out of ${quickFire.termScore.total}.`;        \n        if(quickFire.termScore.incorrect > 0) {\n            summaryText.innerHTML = `<span class=\"emphasis\">You've answered the questions, but not all correctly.</span>`;\n            continueReview.innerHTML = `<span>Continue</span>`;            \n            continueReview.addEventListener('click', e => {\n                const quickFireRevision = quickFireAPI.getQuickFire(quickFire.termScore.fails, enums.quickFireType.DEFINITION, {});\n                quickFireQuestions(quickFireRevision);\n            }, { once: true });            \n        } else {\n            continueReview.classList.add('hide-important');\n            continueReview.addEventListener('click', e => {\n                questions(quickFire);\n            }, { once: true });\n        }\n    } else {\n        summaryText.innerHTML = `<span>You have answered ${quickFire.termScore.total} of ${quickFire.poolSize} questions.</span>`;\n        continueReview.addEventListener('click', e => {\n            questions(quickFire);\n        }, { once: true });\n    }\n};\n\nexport const quickFireHandlers = {\n    filters,\n    questions,\n    headers,\n    init: quickFireAPI.getQuickFire,\n    definitions\n};\n\nconst quickFireFilters = linkFromLesson => {\n    quickFireHandlers.filters(linkFromLesson);\n};\n\nconst quickFireQuestions = quickFire => {\n    quickFireHandlers.questions(quickFire);\n};\n\nconst quickFireGlossary = glossary => {\n    quickFireHandlers.definitions(glossary);\n};\n\nconst quickFireActions = {\n    quickFireFilters,\n    quickFireQuestions,\n    quickFireGlossary\n};","// Module\nvar code = \"<div class=\\\"snapdragon-container\\\">\\n    <dl data-repeat-item=\\\"{{ glossary }}\\\" class=\\\"definition card scrollable\\\">\\n      <dt>{{ item.term }}</dt><dd>{{ item.definition }}</dd>\\n    </dl>\\n</div>\\n    \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"quick-fire\\\">\\n    \\n    <div class=\\\"margin-left centred-block standard-block padding-top\\\">\\n        Answer <input min=\\\"1\\\" max=\\\"{{ quickFire.count }}\\\" required class=\\\"big half-margin-left half-margin-right js-input-quick-fire\\\" type=\\\"number\\\" value=\\\"{{ quickFire.count }}\\\">\\n        <span class=\\\"landscape\\\">questions selected at random from <span class=\\\"js-quick-fire-count\\\">{{ quickFire.count }}</span> terms.</span>\\n        <span class=\\\"portrait\\\">from <span class=\\\"js-quick-fire-count\\\">{{ quickFire.count }}</span> terms.</span>\\n    </div>\\n\\n    <div class=\\\"landscape half-standard-block\\\"></div>\\n    <div class=\\\"portrait padding\\\"></div>\\n\\n    <ul class=\\\"margin-left quick-fire-taxa list-group js-quick-fire-taxa\\\" data-repeat-taxon=\\\"{{ quickFire.filter.taxa }}\\\">\\n      <li class=\\\"list-group-item fit-width margin-right\\\">\\n        <input id=\\\"{{ taxon.name }}\\\" class=\\\"form-check-input mr-1\\\" type=\\\"checkbox\\\" value=\\\"\\\" aria-label=\\\"...\\\">\\n        {{ taxon.name }}<span data-taxon=\\\"{{ taxon.name }}\\\" class=\\\"\\\">{{ taxon.count }}</span>\\n      </li>\\n    </ul>\\n\\n    <div class=\\\"landscape half-standard-block\\\"></div>\\n    <div class=\\\"portrait padding\\\"></div>\\n\\n    <ul class=\\\"margin-left list-group quick-fire-branches js-quick-fire-branches\\\" data-toggle=\\\"buttons\\\" data-repeat-branch=\\\"{{ branches }}\\\">\\n      <li class=\\\"list-group-item fit-width margin-right\\\" data-key=\\\"{{ branch.name }}\\\" data-value=\\\"{{ branch.name }}\\\">\\n        <input class=\\\"form-check-input mr-1\\\" type=\\\"checkbox\\\" value=\\\"\\\" aria-label=\\\"{{ branch.name }}\\\" checked>\\n        {{ branch.name }}<span data-name=\\\"{{ branch.name }}\\\">{{ branch.count }}</span>\\n      </li>\\n    </ul>\\n\\n    <div class=\\\"landscape half-standard-block\\\"></div>\\n    <div class=\\\"portrait half-padding\\\"></div>\\n\\n    <div role=\\\"group\\\" class=\\\"btn-group margin-left quick-fire-options margin-bottom js-quick-fire-filter-options\\\" data-toggle=\\\"buttons\\\" data-repeat-option=\\\"{{ options }}\\\" arai-lable=\\\"Vocab question type: multiple choice or text entry\\\">\\n        <button id=\\\"{{ option.key }}\\\" type=\\\"button\\\" data-key=\\\"{{ option.key }}\\\" class=\\\"btn btn-secondary margin-right\\\" data-value=\\\"{{ option.value }}\\\">\\n          {{ option.value }}\\n        </button>\\n    </div>\\n\\n    <div class=\\\"landscape half-standard-block\\\"></div>\\n\\n    <div class=\\\"low-relief-block standard-block centred-block horizontal-evenly-spaced-block\\\">\\n        <div class=\\\"centred-block fit-width\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"js-quick-fire-technical half-margin-right\\\" id=\\\"technical\\\">\\n            <label for=\\\"technical\\\">Include technical</label>\\n        </div>\\n        <div>\\n            <div class=\\\"btn snap-action-btn js-quick-fire-reset\\\">Reset filters</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"centred-block absolute-bottom\\\">\\n        <button class=\\\"btn snap-action-btn js-create-quick-fire\\\">Start quick-fire review</button>\\n    </div>\\n\\n</div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"quick-fire\\\">\\n\\n    <div class=\\\"margin-left centred-block standard-block justify-space-between\\\">\\n        <h2>\\n            <span>Question {{ total }} of {{ count }}</span>\\n        </h2>\\n        <div class=\\\"margin-right\\\">\\n            <button class=\\\"btn snap-btn small-text js-quick-review-progress\\\">Progress</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"double-centred-block double-standard-block modal-background-relief border-light js-quick-fire-definition\\\">\\n        <span class=\\\"padding\\\">{{ question.definition }}</span>\\n    </div>\\n\\n    <ul id=\\\"0\\\" class=\\\"strips description margin-top js-quick-layouts js-quick-fire-options\\\" data-repeat-answer=\\\"{{ answers }}\\\">\\n        <li class=\\\"strip\\\" id=\\\"{{ answer.term }}\\\" role=\\\"group\\\" aria-label=\\\"answers to the question\\\">\\n            <button class=\\\"snap-icon-btn\\\" data-answer-index=\\\"{{ answer.index }}\\\">\\n                <span>{{ answer.term }}</span>\\n            </button>\\n          </li>\\n      </ul>\\n\\n    <div id=\\\"1\\\" class=\\\"hide vertical-block centred-block margin-top js-quick-layouts quick-fire-text-entry js-quick-fire-text-entry\\\">\\n        <div class=\\\"centred-block standard-block\\\">\\n            <input type=\\\"text\\\" placeholder=\\\"Enter the term that fits this description\\\">\\n        </div>\\n        <div class=\\\"half-standard-block\\\">\\n            <div class=\\\"hide centered-block js-quick-fire-hint\\\">\\n                <span class=\\\"margin-left latin\\\">Hint: </span><span>The answer has two words.</span>\\n            </div>\\n        </div>\\n        \\n    </div>\\n\\n    <div class=\\\"vertical-centred-block centred-block absolute-bottom\\\">\\n\\n      <div class=\\\"margin-left centred-block standard-block js-quick-fire-message\\\"></div>\\n\\n      <div class=\\\"half-standard-block\\\">\\n          Score {{ correct }} of {{ answered }}\\n      </div>  \\n\\n      <div class=\\\"action-update\\\">\\n          <button disabled class=\\\"btn snap-action-btn js-continue-quick-fire-btn\\\">Continue lesson</button>\\n      </div>\\n    </div>\\n\\n</div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"quick-fire\\\">\\n\\n    <div class=\\\"justify-space-between centred-block margin-left standard-block js-quick-fire-summary\\\">\\n        <div>\\n            <span>You have answered all of the questions.</span>\\n        </div>\\n        <div class=\\\"margin-right padding-left nowrap\\\">\\n          <button class=\\\"btn snap-btn small-text js-quick-review-continue-review\\\">Vocab</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"border-light standard-block padding-left centred-block modal-background-relief js-score-text-summary\\\">\\n        You have scored {{ score.correct }} out of {{ score.total }} so far.\\n    </div>\\n\\n    <ul class=\\\"margin-top nav nav-pills nav-fill quick-review-tabs js-quick-review-tabs mb-3\\\" role=\\\"tablist\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" id=\\\"js-quick-review-correct\\\" data-toggle=\\\"pill\\\" role=\\\"tab\\\">\\n                <span class=\\\"landscape\\\">Correct answers</span>\\n                <span class=\\\"portrait\\\">Correct</span>\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\" href=\\\"#\\\" id=\\\"js-quick-review-incorrect\\\" data-toggle=\\\"pill\\\" role=\\\"tab\\\">\\n                <span class=\\\"landscape\\\">Incorrect answers</span>\\n                <span class=\\\"portrait\\\">Incorrect</span>\\n            </a>\\n        </li>\\n      </ul>\\n\\n    <div class=\\\"scrollable accordions-container\\\">\\n\\n        <div id=\\\"accordion-correct\\\" data-type=\\\"js-quick-review-correct\\\" class=\\\"hide-important quick-review-answers js-quick-review-answers\\\" data-repeat-pass=\\\"{{ passes }}\\\">\\n            <div class=\\\"card quick-fire-summary-row margin-bottom\\\">\\n                <div class=\\\"card-header capitalise\\\" id=\\\"pass_header_{{ pass.index }}\\\">\\n                <button type=\\\"button\\\" class=\\\"btn snap-icon-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#pass_target_{{ pass.index }}\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"pass_target_{{ pass.index }}\\\">\\n                    <div>{{ pass.term }}</div>                    \\n                </button>\\n                </div>\\n            </div>\\n            <div id=\\\"pass_target_{{ pass.index }}\\\" class=\\\"collapse\\\" aria-labelledby=\\\"pass_header_{{ pass.index }}\\\" data-parent=\\\"#accordion-correct\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div>{{ pass.definition }}</div>\\n                    <div class=\\\"centred-block half-standard-block\\\">\\n                      <span class=\\\"sr-only\\\">Opens in new window</span>\\n                      <a class=\\\"small-text underline-link {{ pass.showWikiClass }}\\\" href=\\\"{{ pass.wiki }}\\\" target=\\\"_blank\\\">\\n                        <span class=\\\"sr-only\\\">Opens in new window</span>\\n                        <span>View Wikipedia page for {{ pass.term }} in a new window</span>\\n                        <i aria-hidden=\\\"true\\\" class=\\\"super fas fa-external-link-alt\\\"></i>\\n                      </a>                      \\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div id=\\\"accordion-incorrect\\\" data-type=\\\"js-quick-review-incorrect\\\" class=\\\"quick-review-answers js-quick-review-answers\\\" data-repeat-fail=\\\"{{ fails }}\\\">\\n            <div class=\\\"card quick-fire-summary-row margin-bottom\\\">\\n                <div class=\\\"card-header capitalise\\\" id=\\\"fail_header_{{ fail.index }}\\\">\\n                <button type=\\\"button\\\" class=\\\"btn snap-icon-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#fail_target_{{ fail.index }}\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"fail_target_{{ fail.index }}\\\">\\n                    <div>{{ fail.term }}</div>\\n                </button>\\n                </div>\\n            </div>\\n            <div id=\\\"fail_target_{{ fail.index }}\\\" class=\\\"collapse\\\" aria-labelledby=\\\"fail_header_{{ fail.index }}\\\" data-parent=\\\"#accordion-incorrect\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div>{{ fail.definition }}</div>\\n                    <div class=\\\"centred-block half-standard-block\\\">\\n                      <a class=\\\"small-text underline-link {{ fail.showWikiClass }}\\\" href=\\\"{{ fail.wiki }}\\\" target=\\\"_blank\\\">\\n                        <span class=\\\"sr-only\\\">Opens in new window</span>\\n                        <span>View Wikipedia page for {{ fail.term }} in a new window</span>\\n                        <i aria-hidden=\\\"true\\\" class=\\\"super fas fa-external-link-alt\\\"></i>\\n                      </a>\\n                    </div>\\n                    <div class=\\\"small-text margin-top\\\"><span>You answered: </span><span>{{ fail.answer }}</span></div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}